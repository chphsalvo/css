/**
 * grid/_gridFlex.scss Grid Flex
 *
 * Write a description
 */

/*
 * INDEX
 * - flex item
 * - flex wrap
 * - flex alignments
 * - flex col
 * - flex gutter
 * - flex offset
 */

/**
 * flex item
 */

.flex {
  display: flex;
  flex-flow: row wrap; /* flex-direction: row; + flex-wrap: wrap; */

  .item.item-1 {
    flex-grow: 1;
    flex-basis: 0;
  }
  .item.item-2 {
    flex-grow: 2;
    flex-basis: 0;
  }
  @include responsive("xbig") {
    .item.item-xb-1 {
      flex-grow: 1;
      flex-basis: 0;
    }
    .item.item-xb-2 {
      flex-grow: 2;
      flex-basis: 0;
    }
  }
  @include responsive("large") {
    .item.item-l-1 {
      flex-grow: 1;
      flex-basis: 0;
    }
    .item.item-l-2 {
      flex-grow: 2;
      flex-basis: 0;
    }
  }
  @include responsive("medium") {
    .item.item-m-1 {
      flex-grow: 1;
      flex-basis: 0;
    }
    .item.item-m-2 {
      flex-grow: 2;
      flex-basis: 0;
    }
  }
  @include responsive("small") {
    .item.item-s-1 {
      flex-grow: 1;
      flex-basis: 0;
    }
    .item.item-s-2 {
      flex-grow: 2;
      flex-basis: 0;
    }
  }
}

/**
 * flex wrap
 */

.flex.nowrap {
  flex-wrap: nowrap;
}

/**
 * flex alignments
 */

.flex.top {
  align-items: flex-start;
}
.flex.middle {
  align-items: center;
}
.flex.bottom {
  align-items: flex-end;
}
.flex.stretch {
  align-items: stretch;
}

.flex.left {
  justify-content: flex-start;
}
.flex.center {
  justify-content: center;
}
.flex.right {
  justify-content: flex-end;
}
.flex.justify {
  justify-content: space-between;
}
.flex.space {
  justify-content: space-around;
}

/**
 * flex col
 */

$gutter: 20px; // Define columns gutter

.flex{

  .col{
    min-height: 1px;
  }

  @for $i from 0 through 12{
    $width: 100% / 12 * $i;

    .col-#{$i}{
      flex: 0 0 $width;
      @if $i == 12 {
        padding-left: 0px;
        padding-right: 0px;
      } @else{
        padding-left: $gutter / 2;
        padding-right: $gutter / 2;
      }

      &:first-of-type{padding-left: 0px;}
      &:last-of-type{padding-right: 0px;}
    }
  }

  @include responsive("xbig") {
    @for $i from 0 through 12{
      $width: 100% / 12 * $i;
  
      .col-xb-#{$i}{
        flex: 0 0 $width;
        @if $i == 12 {
          padding-left: 0px;
          padding-right: 0px;
        } @else{
          padding-left: $gutter / 2;
          padding-right: $gutter / 2;
        }
  
        &:first-of-type{padding-left: 0px;}
        &:last-of-type{padding-right: 0px;}
      }
    }
  }

  @include responsive("large") {
    @for $i from 0 through 12{
      $width: 100% / 12 * $i;
  
      .col-l-#{$i}{
        flex: 0 0 $width;
        @if $i == 12 {
          padding-left: 0px;
          padding-right: 0px;
        } @else{
          padding-left: $gutter / 2;
          padding-right: $gutter / 2;
        }
  
        &:first-of-type{padding-left: 0px;}
        &:last-of-type{padding-right: 0px;}
      }
    }
  }

  @include responsive("medium") {
    @for $i from 0 through 12{
      $width: 100% / 12 * $i;
  
      .col-m-#{$i}{
        flex: 0 0 $width;
        @if $i == 12 {
          padding-left: 0px;
          padding-right: 0px;
        } @else{
          padding-left: $gutter / 2;
          padding-right: $gutter / 2;
        }
  
        &:first-of-type{padding-left: 0px;}
        &:last-of-type{padding-right: 0px;}
      }
    }
  }

  @include responsive("small") {
    @for $i from 0 through 12{
      $width: 100% / 12 * $i;
  
      .col-s-#{$i}{
        flex: 0 0 $width;
        @if $i == 12 {
          padding-left: 0px;
          padding-right: 0px;
        } @else{
          padding-left: $gutter / 2;
          padding-right: $gutter / 2;
        }
  
        &:first-of-type{padding-left: 0px;}
        &:last-of-type{padding-right: 0px;}
      }
    }
  }

}

/**
 * flex gutter
 * Fix left responsive gutter
 */

.flex{

  .gutter-0{
    padding-left: 0px;
  }
  @include responsive("xbig") {
    .gutter-xb-0{
      padding-left: 0px;
    }
  }
  @include responsive("large") {
    .gutter-l-0{
      padding-left: 0px;
    }
  }
  @include responsive("medium") {
    .gutter-m-0{
      padding-left: 0px;
    }
  }
  @include responsive("small") {
    .gutter-s-0{
      padding-left: 0px;
    }
  }

}

/**
 * flex offset
 */

 .flex{

  @for $i from 0 through 12{
    $marginLeft: 100% / 12 * $i;

    .offset-#{$i}{
      margin-left: $marginLeft;

      //&:first-of-type{padding-left: 0px;}
      //&:last-of-type{padding-right: 0px;}
    }
  }

  @include responsive("xbig") {
    @for $i from 0 through 12{
      $marginLeft: 100% / 12 * $i;
  
      .offset-xb-#{$i}{
        margin-left: $marginLeft;
  
        //&:first-of-type{padding-left: 0px;}
        //&:last-of-type{padding-right: 0px;}
      }
    }
  }

  @include responsive("large") {
    @for $i from 0 through 12{
      $marginLeft: 100% / 12 * $i;
  
      .offset-l-#{$i}{
        margin-left: $marginLeft;
  
        //&:first-of-type{padding-left: 0px;}
        //&:last-of-type{padding-right: 0px;}
      }
    }
  }

  @include responsive("medium") {
    @for $i from 0 through 12{
      $marginLeft: 100% / 12 * $i;
  
      .offset-m-#{$i}{
        margin-left: $marginLeft;
  
        //&:first-of-type{padding-left: 0px;}
        //&:last-of-type{padding-right: 0px;}
      }
    }
  }

  @include responsive("small") {
    @for $i from 0 through 12{
      $marginLeft: 100% / 12 * $i;
  
      .offset-s-#{$i}{
        margin-left: $marginLeft;
  
        //&:first-of-type{padding-left: 0px;}
        //&:last-of-type{padding-right: 0px;}
      }
    }
  }

 }